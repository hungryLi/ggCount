<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="platform.jizhang.biu.service.persistence.mybatis.RolePermisionVOMapper" >
  <resultMap id="BaseResultMap" type="platform.jizhang.biu.service.model.RolePermisionVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="permision_id" property="permisionId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, permision_id
  </sql>
  
  <!-- 关联权限 -->
  <insert id="relePermisions" parameterType="java.util.Map">
  	insert into jz_role_permision (role_id, permision_id) values
  	<foreach collection="p_ids" item="pid" separator="," >
  		(#{r_id,jdbcType=INTEGER},#{pid})
  	</foreach>
  </insert>
  
  <!-- 删除权限 -->
  <delete id="delePermions" parameterType="java.util.Map">
  	delete from jz_role_permision where role_id = #{r_id,jdbcType=INTEGER} and 
  	permision_id in 
  	<foreach collection="p_ids" item="pid" open="( " separator="," close=" )">
  		#{pid}
  	</foreach>
  </delete>
  
  <select id="countNotHasPermisons" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select
		count(1)
	from
		jz_permision
	<where>
		id not in (
			select
				p.id
			from
				jz_role_permision rp
			left join jz_permision p on rp.permision_id = p.id
			where
				rp.role_id = #{r_id,jdbcType=INTEGER}
		)
		<if test="p_name != null">
			and p_name like concat('%',#{p_name,jdbcType=VARCHAR},'%')
		</if>
	</where>
  </select>
  
  <select id="queryNotHasPermison" parameterType="java.util.Map" resultType="java.util.Map">
  	select
		id,p_name,p_code,menu_name
	from
		jz_permision
	<where>
		id not IN(
			select
				p.id
			from
				jz_role_permision rp
			left join jz_permision p ON rp.permision_id = p.id
			where
				rp.role_id = #{r_id,jdbcType=INTEGER}
		)
		<if test="p_name != null">
			and p_name like concat('%',#{p_name,jdbcType=VARCHAR},'%')
		</if>
		limit #{page_num,jdbcType=INTEGER},#{page_size,jdbcType=INTEGER} 
	</where>
  </select>
  
  <select id="countHasPermisons" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select count(1) from jz_role_permision rp 
		left join jz_permision p on rp.permision_id  = p.id 
		<where>
			and rp.role_id = #{r_id,jdbcType=INTEGER}
			<if test="p_name != null">
				and p.p_name like concat('%',#{p_name,jdbcType=VARCHAR},'%')
			</if>
		</where> 
  </select>
  
  <select id="queryHasPermison" parameterType="java.util.Map" resultType="java.util.Map">
	select p.id,p.p_name,p.p_code,p.menu_name from  jz_role_permision rp 
		left join jz_permision p on rp.permision_id  = p.id 
		<where>
			and rp.role_id = #{r_id,jdbcType=INTEGER}
			<if test="p_name != null">
				and p.p_name like concat('%',#{p_name,jdbcType=VARCHAR},'%')
			</if>
		</where> 
		limit #{page_num,jdbcType=INTEGER},#{page_size,jdbcType=INTEGER}
  </select>
  
  <delete id="deletePermision" parameterType="java.lang.Integer">
  	delete from jz_role_permision where permision_id = #{0,jdbcType=INTEGER}
  </delete>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jz_role_permision
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jz_role_permision
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="platform.jizhang.biu.service.model.RolePermisionVO" >
    insert into jz_role_permision (id, role_id, permision_id
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{permisionId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="platform.jizhang.biu.service.model.RolePermisionVO" >
    insert into jz_role_permision
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="permisionId != null" >
        permision_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permisionId != null" >
        #{permisionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="platform.jizhang.biu.service.model.RolePermisionVO" >
    update jz_role_permision
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permisionId != null" >
        permision_id = #{permisionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="platform.jizhang.biu.service.model.RolePermisionVO" >
    update jz_role_permision
    set role_id = #{roleId,jdbcType=INTEGER},
      permision_id = #{permisionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>